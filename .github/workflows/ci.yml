name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: npm install
    
    - name: Run linter
      run: npm run lint
      continue-on-error: true
    
    - name: Check for security vulnerabilities
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Verify project structure
      run: |
        test -f src/index.js || exit 1
        test -f src/broker.js || exit 1
        test -f src/strategy.js || exit 1
        test -f src/portfolio.js || exit 1
        test -f src/config.js || exit 1
        test -f package.json || exit 1
        test -f README.md || exit 1
        test -f LICENSE || exit 1
      shell: bash
    
    - name: Check environment example
      run: test -f .env.example || exit 1
      shell: bash
    
    - name: Verify documentation
      run: |
        test -d docs || exit 1
        test -f docs/START_HERE.md || exit 1
        test -f docs/GETTING_STARTED.md || exit 1
      shell: bash

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Check for secrets
      run: |
        # Check for actual API keys (not examples)
        if grep -r "ALPACA_API_KEY=PK[A-Z0-9]\{20,\}" . --exclude-dir=node_modules --exclude-dir=.git --exclude-dir=docs; then
          echo "Found potential real API key in code!"
          exit 1
        fi
        # Check .env is not committed
        if git ls-files | grep -q "^\.env$"; then
          echo ".env file should not be committed!"
          exit 1
        fi
      shell: bash

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Check code formatting
      run: npm run format
      continue-on-error: true
